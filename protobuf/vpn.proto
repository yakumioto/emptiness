syntax = "proto3";

option go_package = "module github.com/yakumioto/emptiness/protobuf";

service VPN {
  rpc RegisterRoute(Request) returns(Response);
  rpc UnregisterRoute(Request) returns(Response);
  rpc TransferData(stream StreamRequest) returns (stream StreamResponse);
}


enum StatusCode {
  OK = 0;
  UNKNOWN_ERROR = 1;
  INVALID_AUTHORIZATION = 2;
  EXISTED_TUNNEL = 3;
  EXISTED_ROUTE = 4;
  NOT_FOUND_TUNNEL = 5;
}

message Request {
  bytes encrypted_payload = 1;
}

message Response {
  StatusCode status_code = 1;
}

message ConnectRequest {
  string tunnel_id = 1;
  int64 timestamp = 2;
  string nonce = 3;
}

message DisconnectRequest {
  string tunnel_id = 1;
}

message RouteRequest {
  string tunnel_id = 1;
  repeated string routes = 2;
}

message StreamRequest {
  bytes encrypted_payload = 1;
}

message StreamResponse {
  bytes encrypted_payload = 1;
}

enum DataPacketType {
  DATA = 0;
  PING = 1;
  PONG = 2;
}

message DataPacket {
  string tunnel_id = 1;
  int32 type = 2;
  optional bytes payload = 3;
}

enum AuthType {
  NONE = 0;
  XOR = 1;
}